
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000614  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005c0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000614  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000644  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000684  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009d9  00000000  00000000  0000070c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006be  00000000  00000000  000010e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000443  00000000  00000000  000017a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f4  00000000  00000000  00001be8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000045e  00000000  00000000  00001cdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001a1  00000000  00000000  0000213a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  000022db  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 a6 00 	call	0x14c	; 0x14c <main>
  78:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <initADC>:
	// 4. Timer0 para antirrebote (~10ms con 16MHz)
	TCCR0A |= 0x00;
	TCCR0B |= (1 << CS02) | (1 << CS00);; // Prescaler de 8
	TIMSK0 = (1 << TOIE0)| (1 << OCIE0A);
	
	sei();
  80:	80 e4       	ldi	r24, 0x40	; 64
  82:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  86:	87 e8       	ldi	r24, 0x87	; 135
  88:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  8c:	08 95       	ret

0000008e <setup>:
  8e:	17 b8       	out	0x07, r1	; 7
  90:	8f ef       	ldi	r24, 0xFF	; 255
  92:	84 b9       	out	0x04, r24	; 4
  94:	08 95       	ret

00000096 <leerADC>:
}

uint16_t leerADC(uint8_t canal) {
	ADMUX = (ADMUX & 0xF0) | (canal & 0x0F); // Seleccionar canal
  96:	ec e7       	ldi	r30, 0x7C	; 124
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	90 81       	ld	r25, Z
  9c:	90 7f       	andi	r25, 0xF0	; 240
  9e:	8f 70       	andi	r24, 0x0F	; 15
  a0:	89 2b       	or	r24, r25
  a2:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC); // Iniciar conversión
  a4:	ea e7       	ldi	r30, 0x7A	; 122
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	80 81       	ld	r24, Z
  aa:	80 64       	ori	r24, 0x40	; 64
  ac:	80 83       	st	Z, r24
	while (ADCSRA & (1 << ADSC));
  ae:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  b2:	86 fd       	sbrc	r24, 6
  b4:	fc cf       	rjmp	.-8      	; 0xae <leerADC+0x18>
	return ADC; //
  b6:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  ba:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
  be:	08 95       	ret

000000c0 <PWM_init>:


void PWM_init() {
	// Fast PWM, modo 14: TOP = ICR1
	TCCR1A |= (1 << COM1A1) | (1 << WGM11) | (1 << COM1B1);
  c0:	e0 e8       	ldi	r30, 0x80	; 128
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	80 81       	ld	r24, Z
  c6:	82 6a       	ori	r24, 0xA2	; 162
  c8:	80 83       	st	Z, r24
	TCCR1B |= (1 << WGM13) | (1 << WGM12) | (1 << CS11); // prescaler 8
  ca:	e1 e8       	ldi	r30, 0x81	; 129
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	8a 61       	ori	r24, 0x1A	; 26
  d2:	80 83       	st	Z, r24

	ICR1 = 65000; // TOP = 20 ms con reloj de 16MHz y prescaler 8
  d4:	88 ee       	ldi	r24, 0xE8	; 232
  d6:	9d ef       	ldi	r25, 0xFD	; 253
  d8:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
  dc:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
	
	DDRB |= (1 << PORTB1) | (1 << PORTB2); // OC1A (D9) como salida
  e0:	84 b1       	in	r24, 0x04	; 4
  e2:	86 60       	ori	r24, 0x06	; 6
  e4:	84 b9       	out	0x04, r24	; 4
  e6:	08 95       	ret

000000e8 <PWM_init2>:
}

void PWM_init2() {
	// Configurar Timer2 para modo FASAT PWM PWM con TOP=0xFF
	TCCR2A |= (1 << COM2A1) | (1 << COM2B1) | (1 << WGM20) | (1 << WGM21); // Non-inverting en ambos canales
  e8:	e0 eb       	ldi	r30, 0xB0	; 176
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	80 81       	ld	r24, Z
  ee:	83 6a       	ori	r24, 0xA3	; 163
  f0:	80 83       	st	Z, r24
	TCCR2B |= (1 << CS22) | (1 << CS21) | (1 << CS20); // Prescaler de 1024 (ajustar según necesidades)
  f2:	e1 eb       	ldi	r30, 0xB1	; 177
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	87 60       	ori	r24, 0x07	; 7
  fa:	80 83       	st	Z, r24

	DDRD |= (1 << PORTD3); // OC2B (PD3) como salida
  fc:	8a b1       	in	r24, 0x0a	; 10
  fe:	88 60       	ori	r24, 0x08	; 8
 100:	8a b9       	out	0x0a, r24	; 10
	DDRB |= (1 << PORTB3);  // OC2A (PB3) como salida (en la mayoría de los ATmega)
 102:	84 b1       	in	r24, 0x04	; 4
 104:	88 60       	ori	r24, 0x08	; 8
 106:	84 b9       	out	0x04, r24	; 4
 108:	08 95       	ret

0000010a <PWM_init0>:
}


void PWM_init0() {
	// Configurar Timer2 para modo FAST PWM top 0xFF
	TCCR0A |= (1 << COM0A1) | (1 << COM0B1) | (1 << WGM00) | (1 << WGM01); // Non-inverting en ambos canales
 10a:	84 b5       	in	r24, 0x24	; 36
 10c:	83 6a       	ori	r24, 0xA3	; 163
 10e:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS02)  | (1 << CS00); // Prescaler de 1024 (ajustar según necesidades)
 110:	85 b5       	in	r24, 0x25	; 37
 112:	85 60       	ori	r24, 0x05	; 5
 114:	85 bd       	out	0x25, r24	; 37

	DDRD |= (1 << PORTD6); // OC0A 
 116:	8a b1       	in	r24, 0x0a	; 10
 118:	80 64       	ori	r24, 0x40	; 64
 11a:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1 << PORTD5);  // OC0B
 11c:	8a b1       	in	r24, 0x0a	; 10
 11e:	80 62       	ori	r24, 0x20	; 32
 120:	8a b9       	out	0x0a, r24	; 10
 122:	08 95       	ret

00000124 <PWM_setAngle>:
}

void PWM_setAngle(uint16_t angle) {
	OCR1A = angle;
 124:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 128:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 12c:	08 95       	ret

0000012e <PWM_setAngle2>:
}
void PWM_setAngle2(uint16_t mov) {
	OCR1B = mov;
 12e:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 132:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
 136:	08 95       	ret

00000138 <PWM_setAngle3>:
}
void PWM_setAngle3(uint16_t tung) {
	OCR2A = tung;
 138:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
 13c:	08 95       	ret

0000013e <PWM_setAngle4>:
}
void PWM_setAngle4(uint16_t cerati) {
	OCR2B = cerati;
 13e:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
 142:	08 95       	ret

00000144 <PWM_setAngle5>:
}
void PWM_setAngle5(uint16_t angle5) {
	OCR0A = angle5;
 144:	87 bd       	out	0x27, r24	; 39
 146:	08 95       	ret

00000148 <PWM_setAngle6>:
}
void PWM_setAngle6(uint16_t angle6) {
	OCR0B = angle6;
 148:	88 bd       	out	0x28, r24	; 40
 14a:	08 95       	ret

0000014c <main>:
}


int main(void)
{
	setup();
 14c:	0e 94 47 00 	call	0x8e	; 0x8e <setup>
	initADC();
 150:	0e 94 40 00 	call	0x80	; 0x80 <initADC>
	PWM_init();
 154:	0e 94 60 00 	call	0xc0	; 0xc0 <PWM_init>
	PWM_init2();
 158:	0e 94 74 00 	call	0xe8	; 0xe8 <PWM_init2>
	PWM_init0();
 15c:	0e 94 85 00 	call	0x10a	; 0x10a <PWM_init0>
    {
		//EJE X  --- ADC 6
		// EJE Y --- ADC 7 
	
		
		uint16_t servo1 = leerADC(6); // 0 - 1023
 160:	86 e0       	ldi	r24, 0x06	; 6
 162:	0e 94 4b 00 	call	0x96	; 0x96 <leerADC>
		uint16_t angle = (servo1 * -1.96) + 2100.0; //30 grados 
 166:	bc 01       	movw	r22, r24
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__floatunsisf>
 170:	28 e4       	ldi	r18, 0x48	; 72
 172:	31 ee       	ldi	r19, 0xE1	; 225
 174:	4a ef       	ldi	r20, 0xFA	; 250
 176:	5f eb       	ldi	r21, 0xBF	; 191
 178:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__mulsf3>
 17c:	20 e0       	ldi	r18, 0x00	; 0
 17e:	30 e4       	ldi	r19, 0x40	; 64
 180:	43 e0       	ldi	r20, 0x03	; 3
 182:	55 e4       	ldi	r21, 0x45	; 69
 184:	0e 94 48 01 	call	0x290	; 0x290 <__addsf3>
 188:	0e 94 b4 01 	call	0x368	; 0x368 <__fixunssfsi>
		//servo 1---- D9
		PWM_setAngle(angle);
 18c:	cb 01       	movw	r24, r22
 18e:	0e 94 92 00 	call	0x124	; 0x124 <PWM_setAngle>
		
		
		uint16_t servo2 = leerADC(6); // 0 - 1023
 192:	86 e0       	ldi	r24, 0x06	; 6
 194:	0e 94 4b 00 	call	0x96	; 0x96 <leerADC>
		uint16_t mov = (servo2 * 1.96) + 1199.0; // 30 grados
 198:	bc 01       	movw	r22, r24
 19a:	80 e0       	ldi	r24, 0x00	; 0
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__floatunsisf>
 1a2:	28 e4       	ldi	r18, 0x48	; 72
 1a4:	31 ee       	ldi	r19, 0xE1	; 225
 1a6:	4a ef       	ldi	r20, 0xFA	; 250
 1a8:	5f e3       	ldi	r21, 0x3F	; 63
 1aa:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__mulsf3>
 1ae:	20 e0       	ldi	r18, 0x00	; 0
 1b0:	30 ee       	ldi	r19, 0xE0	; 224
 1b2:	45 e9       	ldi	r20, 0x95	; 149
 1b4:	54 e4       	ldi	r21, 0x44	; 68
 1b6:	0e 94 48 01 	call	0x290	; 0x290 <__addsf3>
 1ba:	0e 94 b4 01 	call	0x368	; 0x368 <__fixunssfsi>
		//servo 2---- D10
		PWM_setAngle2(mov);
 1be:	cb 01       	movw	r24, r22
 1c0:	0e 94 97 00 	call	0x12e	; 0x12e <PWM_setAngle2>
		

		uint16_t lol = leerADC(6);
 1c4:	86 e0       	ldi	r24, 0x06	; 6
 1c6:	0e 94 4b 00 	call	0x96	; 0x96 <leerADC>
		uint16_t tung = (lol* 0.0137) + 9;  //90 grados
 1ca:	bc 01       	movw	r22, r24
 1cc:	80 e0       	ldi	r24, 0x00	; 0
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__floatunsisf>
 1d4:	27 ef       	ldi	r18, 0xF7	; 247
 1d6:	35 e7       	ldi	r19, 0x75	; 117
 1d8:	40 e6       	ldi	r20, 0x60	; 96
 1da:	5c e3       	ldi	r21, 0x3C	; 60
 1dc:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__mulsf3>
 1e0:	20 e0       	ldi	r18, 0x00	; 0
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	40 e1       	ldi	r20, 0x10	; 16
 1e6:	51 e4       	ldi	r21, 0x41	; 65
 1e8:	0e 94 48 01 	call	0x290	; 0x290 <__addsf3>
 1ec:	0e 94 b4 01 	call	0x368	; 0x368 <__fixunssfsi>
		//servo 6 --- D11
		PWM_setAngle3(tung);
 1f0:	cb 01       	movw	r24, r22
 1f2:	0e 94 9c 00 	call	0x138	; 0x138 <PWM_setAngle3>
		
		uint16_t caifanes = leerADC(7);
 1f6:	87 e0       	ldi	r24, 0x07	; 7
 1f8:	0e 94 4b 00 	call	0x96	; 0x96 <leerADC>
		uint16_t cerati = (caifanes*0.00684)+9; //45 Grados
 1fc:	bc 01       	movw	r22, r24
 1fe:	80 e0       	ldi	r24, 0x00	; 0
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__floatunsisf>
 206:	24 e1       	ldi	r18, 0x14	; 20
 208:	32 e2       	ldi	r19, 0x22	; 34
 20a:	40 ee       	ldi	r20, 0xE0	; 224
 20c:	5b e3       	ldi	r21, 0x3B	; 59
 20e:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__mulsf3>
 212:	20 e0       	ldi	r18, 0x00	; 0
 214:	30 e0       	ldi	r19, 0x00	; 0
 216:	40 e1       	ldi	r20, 0x10	; 16
 218:	51 e4       	ldi	r21, 0x41	; 65
 21a:	0e 94 48 01 	call	0x290	; 0x290 <__addsf3>
 21e:	0e 94 b4 01 	call	0x368	; 0x368 <__fixunssfsi>
		// servo 5 --- D3
		PWM_setAngle4(cerati);
 222:	cb 01       	movw	r24, r22
 224:	0e 94 9f 00 	call	0x13e	; 0x13e <PWM_setAngle4>
		
		// CEJASSS
		uint16_t cejas = leerADC(0);
 228:	80 e0       	ldi	r24, 0x00	; 0
 22a:	0e 94 4b 00 	call	0x96	; 0x96 <leerADC>
		uint16_t angle5 = (cejas*0.0039 )+9;
 22e:	bc 01       	movw	r22, r24
 230:	80 e0       	ldi	r24, 0x00	; 0
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__floatunsisf>
 238:	24 e2       	ldi	r18, 0x24	; 36
 23a:	37 e9       	ldi	r19, 0x97	; 151
 23c:	4f e7       	ldi	r20, 0x7F	; 127
 23e:	5b e3       	ldi	r21, 0x3B	; 59
 240:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__mulsf3>
 244:	20 e0       	ldi	r18, 0x00	; 0
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	40 e1       	ldi	r20, 0x10	; 16
 24a:	51 e4       	ldi	r21, 0x41	; 65
 24c:	0e 94 48 01 	call	0x290	; 0x290 <__addsf3>
 250:	0e 94 b4 01 	call	0x368	; 0x368 <__fixunssfsi>
		//servo 3 --- D6
		PWM_setAngle5(angle5);
 254:	cb 01       	movw	r24, r22
 256:	0e 94 a2 00 	call	0x144	; 0x144 <PWM_setAngle5>
		
		uint16_t cejas2 = leerADC(0);
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	0e 94 4b 00 	call	0x96	; 0x96 <leerADC>
		uint16_t angle6 = (cejas2*-0.0039 )+13;
 260:	bc 01       	movw	r22, r24
 262:	80 e0       	ldi	r24, 0x00	; 0
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__floatunsisf>
 26a:	24 e2       	ldi	r18, 0x24	; 36
 26c:	37 e9       	ldi	r19, 0x97	; 151
 26e:	4f e7       	ldi	r20, 0x7F	; 127
 270:	5b eb       	ldi	r21, 0xBB	; 187
 272:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__mulsf3>
 276:	20 e0       	ldi	r18, 0x00	; 0
 278:	30 e0       	ldi	r19, 0x00	; 0
 27a:	40 e5       	ldi	r20, 0x50	; 80
 27c:	51 e4       	ldi	r21, 0x41	; 65
 27e:	0e 94 48 01 	call	0x290	; 0x290 <__addsf3>
 282:	0e 94 b4 01 	call	0x368	; 0x368 <__fixunssfsi>
		//servo 4 --- D5
		PWM_setAngle6(angle6);
 286:	cb 01       	movw	r24, r22
 288:	0e 94 a4 00 	call	0x148	; 0x148 <PWM_setAngle6>
 28c:	69 cf       	rjmp	.-302    	; 0x160 <main+0x14>

0000028e <__subsf3>:
 28e:	50 58       	subi	r21, 0x80	; 128

00000290 <__addsf3>:
 290:	bb 27       	eor	r27, r27
 292:	aa 27       	eor	r26, r26
 294:	0e 94 5f 01 	call	0x2be	; 0x2be <__addsf3x>
 298:	0c 94 37 02 	jmp	0x46e	; 0x46e <__fp_round>
 29c:	0e 94 29 02 	call	0x452	; 0x452 <__fp_pscA>
 2a0:	38 f0       	brcs	.+14     	; 0x2b0 <__addsf3+0x20>
 2a2:	0e 94 30 02 	call	0x460	; 0x460 <__fp_pscB>
 2a6:	20 f0       	brcs	.+8      	; 0x2b0 <__addsf3+0x20>
 2a8:	39 f4       	brne	.+14     	; 0x2b8 <__addsf3+0x28>
 2aa:	9f 3f       	cpi	r25, 0xFF	; 255
 2ac:	19 f4       	brne	.+6      	; 0x2b4 <__addsf3+0x24>
 2ae:	26 f4       	brtc	.+8      	; 0x2b8 <__addsf3+0x28>
 2b0:	0c 94 26 02 	jmp	0x44c	; 0x44c <__fp_nan>
 2b4:	0e f4       	brtc	.+2      	; 0x2b8 <__addsf3+0x28>
 2b6:	e0 95       	com	r30
 2b8:	e7 fb       	bst	r30, 7
 2ba:	0c 94 20 02 	jmp	0x440	; 0x440 <__fp_inf>

000002be <__addsf3x>:
 2be:	e9 2f       	mov	r30, r25
 2c0:	0e 94 48 02 	call	0x490	; 0x490 <__fp_split3>
 2c4:	58 f3       	brcs	.-42     	; 0x29c <__addsf3+0xc>
 2c6:	ba 17       	cp	r27, r26
 2c8:	62 07       	cpc	r22, r18
 2ca:	73 07       	cpc	r23, r19
 2cc:	84 07       	cpc	r24, r20
 2ce:	95 07       	cpc	r25, r21
 2d0:	20 f0       	brcs	.+8      	; 0x2da <__addsf3x+0x1c>
 2d2:	79 f4       	brne	.+30     	; 0x2f2 <__addsf3x+0x34>
 2d4:	a6 f5       	brtc	.+104    	; 0x33e <__addsf3x+0x80>
 2d6:	0c 94 6a 02 	jmp	0x4d4	; 0x4d4 <__fp_zero>
 2da:	0e f4       	brtc	.+2      	; 0x2de <__addsf3x+0x20>
 2dc:	e0 95       	com	r30
 2de:	0b 2e       	mov	r0, r27
 2e0:	ba 2f       	mov	r27, r26
 2e2:	a0 2d       	mov	r26, r0
 2e4:	0b 01       	movw	r0, r22
 2e6:	b9 01       	movw	r22, r18
 2e8:	90 01       	movw	r18, r0
 2ea:	0c 01       	movw	r0, r24
 2ec:	ca 01       	movw	r24, r20
 2ee:	a0 01       	movw	r20, r0
 2f0:	11 24       	eor	r1, r1
 2f2:	ff 27       	eor	r31, r31
 2f4:	59 1b       	sub	r21, r25
 2f6:	99 f0       	breq	.+38     	; 0x31e <__addsf3x+0x60>
 2f8:	59 3f       	cpi	r21, 0xF9	; 249
 2fa:	50 f4       	brcc	.+20     	; 0x310 <__addsf3x+0x52>
 2fc:	50 3e       	cpi	r21, 0xE0	; 224
 2fe:	68 f1       	brcs	.+90     	; 0x35a <__addsf3x+0x9c>
 300:	1a 16       	cp	r1, r26
 302:	f0 40       	sbci	r31, 0x00	; 0
 304:	a2 2f       	mov	r26, r18
 306:	23 2f       	mov	r18, r19
 308:	34 2f       	mov	r19, r20
 30a:	44 27       	eor	r20, r20
 30c:	58 5f       	subi	r21, 0xF8	; 248
 30e:	f3 cf       	rjmp	.-26     	; 0x2f6 <__addsf3x+0x38>
 310:	46 95       	lsr	r20
 312:	37 95       	ror	r19
 314:	27 95       	ror	r18
 316:	a7 95       	ror	r26
 318:	f0 40       	sbci	r31, 0x00	; 0
 31a:	53 95       	inc	r21
 31c:	c9 f7       	brne	.-14     	; 0x310 <__addsf3x+0x52>
 31e:	7e f4       	brtc	.+30     	; 0x33e <__addsf3x+0x80>
 320:	1f 16       	cp	r1, r31
 322:	ba 0b       	sbc	r27, r26
 324:	62 0b       	sbc	r22, r18
 326:	73 0b       	sbc	r23, r19
 328:	84 0b       	sbc	r24, r20
 32a:	ba f0       	brmi	.+46     	; 0x35a <__addsf3x+0x9c>
 32c:	91 50       	subi	r25, 0x01	; 1
 32e:	a1 f0       	breq	.+40     	; 0x358 <__addsf3x+0x9a>
 330:	ff 0f       	add	r31, r31
 332:	bb 1f       	adc	r27, r27
 334:	66 1f       	adc	r22, r22
 336:	77 1f       	adc	r23, r23
 338:	88 1f       	adc	r24, r24
 33a:	c2 f7       	brpl	.-16     	; 0x32c <__addsf3x+0x6e>
 33c:	0e c0       	rjmp	.+28     	; 0x35a <__addsf3x+0x9c>
 33e:	ba 0f       	add	r27, r26
 340:	62 1f       	adc	r22, r18
 342:	73 1f       	adc	r23, r19
 344:	84 1f       	adc	r24, r20
 346:	48 f4       	brcc	.+18     	; 0x35a <__addsf3x+0x9c>
 348:	87 95       	ror	r24
 34a:	77 95       	ror	r23
 34c:	67 95       	ror	r22
 34e:	b7 95       	ror	r27
 350:	f7 95       	ror	r31
 352:	9e 3f       	cpi	r25, 0xFE	; 254
 354:	08 f0       	brcs	.+2      	; 0x358 <__addsf3x+0x9a>
 356:	b0 cf       	rjmp	.-160    	; 0x2b8 <__addsf3+0x28>
 358:	93 95       	inc	r25
 35a:	88 0f       	add	r24, r24
 35c:	08 f0       	brcs	.+2      	; 0x360 <__addsf3x+0xa2>
 35e:	99 27       	eor	r25, r25
 360:	ee 0f       	add	r30, r30
 362:	97 95       	ror	r25
 364:	87 95       	ror	r24
 366:	08 95       	ret

00000368 <__fixunssfsi>:
 368:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__fp_splitA>
 36c:	88 f0       	brcs	.+34     	; 0x390 <__fixunssfsi+0x28>
 36e:	9f 57       	subi	r25, 0x7F	; 127
 370:	98 f0       	brcs	.+38     	; 0x398 <__fixunssfsi+0x30>
 372:	b9 2f       	mov	r27, r25
 374:	99 27       	eor	r25, r25
 376:	b7 51       	subi	r27, 0x17	; 23
 378:	b0 f0       	brcs	.+44     	; 0x3a6 <__fixunssfsi+0x3e>
 37a:	e1 f0       	breq	.+56     	; 0x3b4 <__fixunssfsi+0x4c>
 37c:	66 0f       	add	r22, r22
 37e:	77 1f       	adc	r23, r23
 380:	88 1f       	adc	r24, r24
 382:	99 1f       	adc	r25, r25
 384:	1a f0       	brmi	.+6      	; 0x38c <__fixunssfsi+0x24>
 386:	ba 95       	dec	r27
 388:	c9 f7       	brne	.-14     	; 0x37c <__fixunssfsi+0x14>
 38a:	14 c0       	rjmp	.+40     	; 0x3b4 <__fixunssfsi+0x4c>
 38c:	b1 30       	cpi	r27, 0x01	; 1
 38e:	91 f0       	breq	.+36     	; 0x3b4 <__fixunssfsi+0x4c>
 390:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <__fp_zero>
 394:	b1 e0       	ldi	r27, 0x01	; 1
 396:	08 95       	ret
 398:	0c 94 6a 02 	jmp	0x4d4	; 0x4d4 <__fp_zero>
 39c:	67 2f       	mov	r22, r23
 39e:	78 2f       	mov	r23, r24
 3a0:	88 27       	eor	r24, r24
 3a2:	b8 5f       	subi	r27, 0xF8	; 248
 3a4:	39 f0       	breq	.+14     	; 0x3b4 <__fixunssfsi+0x4c>
 3a6:	b9 3f       	cpi	r27, 0xF9	; 249
 3a8:	cc f3       	brlt	.-14     	; 0x39c <__fixunssfsi+0x34>
 3aa:	86 95       	lsr	r24
 3ac:	77 95       	ror	r23
 3ae:	67 95       	ror	r22
 3b0:	b3 95       	inc	r27
 3b2:	d9 f7       	brne	.-10     	; 0x3aa <__fixunssfsi+0x42>
 3b4:	3e f4       	brtc	.+14     	; 0x3c4 <__fixunssfsi+0x5c>
 3b6:	90 95       	com	r25
 3b8:	80 95       	com	r24
 3ba:	70 95       	com	r23
 3bc:	61 95       	neg	r22
 3be:	7f 4f       	sbci	r23, 0xFF	; 255
 3c0:	8f 4f       	sbci	r24, 0xFF	; 255
 3c2:	9f 4f       	sbci	r25, 0xFF	; 255
 3c4:	08 95       	ret

000003c6 <__floatunsisf>:
 3c6:	e8 94       	clt
 3c8:	09 c0       	rjmp	.+18     	; 0x3dc <__floatsisf+0x12>

000003ca <__floatsisf>:
 3ca:	97 fb       	bst	r25, 7
 3cc:	3e f4       	brtc	.+14     	; 0x3dc <__floatsisf+0x12>
 3ce:	90 95       	com	r25
 3d0:	80 95       	com	r24
 3d2:	70 95       	com	r23
 3d4:	61 95       	neg	r22
 3d6:	7f 4f       	sbci	r23, 0xFF	; 255
 3d8:	8f 4f       	sbci	r24, 0xFF	; 255
 3da:	9f 4f       	sbci	r25, 0xFF	; 255
 3dc:	99 23       	and	r25, r25
 3de:	a9 f0       	breq	.+42     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3e0:	f9 2f       	mov	r31, r25
 3e2:	96 e9       	ldi	r25, 0x96	; 150
 3e4:	bb 27       	eor	r27, r27
 3e6:	93 95       	inc	r25
 3e8:	f6 95       	lsr	r31
 3ea:	87 95       	ror	r24
 3ec:	77 95       	ror	r23
 3ee:	67 95       	ror	r22
 3f0:	b7 95       	ror	r27
 3f2:	f1 11       	cpse	r31, r1
 3f4:	f8 cf       	rjmp	.-16     	; 0x3e6 <__floatsisf+0x1c>
 3f6:	fa f4       	brpl	.+62     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 3f8:	bb 0f       	add	r27, r27
 3fa:	11 f4       	brne	.+4      	; 0x400 <__EEPROM_REGION_LENGTH__>
 3fc:	60 ff       	sbrs	r22, 0
 3fe:	1b c0       	rjmp	.+54     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 400:	6f 5f       	subi	r22, 0xFF	; 255
 402:	7f 4f       	sbci	r23, 0xFF	; 255
 404:	8f 4f       	sbci	r24, 0xFF	; 255
 406:	9f 4f       	sbci	r25, 0xFF	; 255
 408:	16 c0       	rjmp	.+44     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 40a:	88 23       	and	r24, r24
 40c:	11 f0       	breq	.+4      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 40e:	96 e9       	ldi	r25, 0x96	; 150
 410:	11 c0       	rjmp	.+34     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 412:	77 23       	and	r23, r23
 414:	21 f0       	breq	.+8      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 416:	9e e8       	ldi	r25, 0x8E	; 142
 418:	87 2f       	mov	r24, r23
 41a:	76 2f       	mov	r23, r22
 41c:	05 c0       	rjmp	.+10     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 41e:	66 23       	and	r22, r22
 420:	71 f0       	breq	.+28     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 422:	96 e8       	ldi	r25, 0x86	; 134
 424:	86 2f       	mov	r24, r22
 426:	70 e0       	ldi	r23, 0x00	; 0
 428:	60 e0       	ldi	r22, 0x00	; 0
 42a:	2a f0       	brmi	.+10     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 42c:	9a 95       	dec	r25
 42e:	66 0f       	add	r22, r22
 430:	77 1f       	adc	r23, r23
 432:	88 1f       	adc	r24, r24
 434:	da f7       	brpl	.-10     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 436:	88 0f       	add	r24, r24
 438:	96 95       	lsr	r25
 43a:	87 95       	ror	r24
 43c:	97 f9       	bld	r25, 7
 43e:	08 95       	ret

00000440 <__fp_inf>:
 440:	97 f9       	bld	r25, 7
 442:	9f 67       	ori	r25, 0x7F	; 127
 444:	80 e8       	ldi	r24, 0x80	; 128
 446:	70 e0       	ldi	r23, 0x00	; 0
 448:	60 e0       	ldi	r22, 0x00	; 0
 44a:	08 95       	ret

0000044c <__fp_nan>:
 44c:	9f ef       	ldi	r25, 0xFF	; 255
 44e:	80 ec       	ldi	r24, 0xC0	; 192
 450:	08 95       	ret

00000452 <__fp_pscA>:
 452:	00 24       	eor	r0, r0
 454:	0a 94       	dec	r0
 456:	16 16       	cp	r1, r22
 458:	17 06       	cpc	r1, r23
 45a:	18 06       	cpc	r1, r24
 45c:	09 06       	cpc	r0, r25
 45e:	08 95       	ret

00000460 <__fp_pscB>:
 460:	00 24       	eor	r0, r0
 462:	0a 94       	dec	r0
 464:	12 16       	cp	r1, r18
 466:	13 06       	cpc	r1, r19
 468:	14 06       	cpc	r1, r20
 46a:	05 06       	cpc	r0, r21
 46c:	08 95       	ret

0000046e <__fp_round>:
 46e:	09 2e       	mov	r0, r25
 470:	03 94       	inc	r0
 472:	00 0c       	add	r0, r0
 474:	11 f4       	brne	.+4      	; 0x47a <__fp_round+0xc>
 476:	88 23       	and	r24, r24
 478:	52 f0       	brmi	.+20     	; 0x48e <__fp_round+0x20>
 47a:	bb 0f       	add	r27, r27
 47c:	40 f4       	brcc	.+16     	; 0x48e <__fp_round+0x20>
 47e:	bf 2b       	or	r27, r31
 480:	11 f4       	brne	.+4      	; 0x486 <__fp_round+0x18>
 482:	60 ff       	sbrs	r22, 0
 484:	04 c0       	rjmp	.+8      	; 0x48e <__fp_round+0x20>
 486:	6f 5f       	subi	r22, 0xFF	; 255
 488:	7f 4f       	sbci	r23, 0xFF	; 255
 48a:	8f 4f       	sbci	r24, 0xFF	; 255
 48c:	9f 4f       	sbci	r25, 0xFF	; 255
 48e:	08 95       	ret

00000490 <__fp_split3>:
 490:	57 fd       	sbrc	r21, 7
 492:	90 58       	subi	r25, 0x80	; 128
 494:	44 0f       	add	r20, r20
 496:	55 1f       	adc	r21, r21
 498:	59 f0       	breq	.+22     	; 0x4b0 <__fp_splitA+0x10>
 49a:	5f 3f       	cpi	r21, 0xFF	; 255
 49c:	71 f0       	breq	.+28     	; 0x4ba <__fp_splitA+0x1a>
 49e:	47 95       	ror	r20

000004a0 <__fp_splitA>:
 4a0:	88 0f       	add	r24, r24
 4a2:	97 fb       	bst	r25, 7
 4a4:	99 1f       	adc	r25, r25
 4a6:	61 f0       	breq	.+24     	; 0x4c0 <__fp_splitA+0x20>
 4a8:	9f 3f       	cpi	r25, 0xFF	; 255
 4aa:	79 f0       	breq	.+30     	; 0x4ca <__fp_splitA+0x2a>
 4ac:	87 95       	ror	r24
 4ae:	08 95       	ret
 4b0:	12 16       	cp	r1, r18
 4b2:	13 06       	cpc	r1, r19
 4b4:	14 06       	cpc	r1, r20
 4b6:	55 1f       	adc	r21, r21
 4b8:	f2 cf       	rjmp	.-28     	; 0x49e <__fp_split3+0xe>
 4ba:	46 95       	lsr	r20
 4bc:	f1 df       	rcall	.-30     	; 0x4a0 <__fp_splitA>
 4be:	08 c0       	rjmp	.+16     	; 0x4d0 <__fp_splitA+0x30>
 4c0:	16 16       	cp	r1, r22
 4c2:	17 06       	cpc	r1, r23
 4c4:	18 06       	cpc	r1, r24
 4c6:	99 1f       	adc	r25, r25
 4c8:	f1 cf       	rjmp	.-30     	; 0x4ac <__fp_splitA+0xc>
 4ca:	86 95       	lsr	r24
 4cc:	71 05       	cpc	r23, r1
 4ce:	61 05       	cpc	r22, r1
 4d0:	08 94       	sec
 4d2:	08 95       	ret

000004d4 <__fp_zero>:
 4d4:	e8 94       	clt

000004d6 <__fp_szero>:
 4d6:	bb 27       	eor	r27, r27
 4d8:	66 27       	eor	r22, r22
 4da:	77 27       	eor	r23, r23
 4dc:	cb 01       	movw	r24, r22
 4de:	97 f9       	bld	r25, 7
 4e0:	08 95       	ret

000004e2 <__mulsf3>:
 4e2:	0e 94 84 02 	call	0x508	; 0x508 <__mulsf3x>
 4e6:	0c 94 37 02 	jmp	0x46e	; 0x46e <__fp_round>
 4ea:	0e 94 29 02 	call	0x452	; 0x452 <__fp_pscA>
 4ee:	38 f0       	brcs	.+14     	; 0x4fe <__mulsf3+0x1c>
 4f0:	0e 94 30 02 	call	0x460	; 0x460 <__fp_pscB>
 4f4:	20 f0       	brcs	.+8      	; 0x4fe <__mulsf3+0x1c>
 4f6:	95 23       	and	r25, r21
 4f8:	11 f0       	breq	.+4      	; 0x4fe <__mulsf3+0x1c>
 4fa:	0c 94 20 02 	jmp	0x440	; 0x440 <__fp_inf>
 4fe:	0c 94 26 02 	jmp	0x44c	; 0x44c <__fp_nan>
 502:	11 24       	eor	r1, r1
 504:	0c 94 6b 02 	jmp	0x4d6	; 0x4d6 <__fp_szero>

00000508 <__mulsf3x>:
 508:	0e 94 48 02 	call	0x490	; 0x490 <__fp_split3>
 50c:	70 f3       	brcs	.-36     	; 0x4ea <__mulsf3+0x8>

0000050e <__mulsf3_pse>:
 50e:	95 9f       	mul	r25, r21
 510:	c1 f3       	breq	.-16     	; 0x502 <__mulsf3+0x20>
 512:	95 0f       	add	r25, r21
 514:	50 e0       	ldi	r21, 0x00	; 0
 516:	55 1f       	adc	r21, r21
 518:	62 9f       	mul	r22, r18
 51a:	f0 01       	movw	r30, r0
 51c:	72 9f       	mul	r23, r18
 51e:	bb 27       	eor	r27, r27
 520:	f0 0d       	add	r31, r0
 522:	b1 1d       	adc	r27, r1
 524:	63 9f       	mul	r22, r19
 526:	aa 27       	eor	r26, r26
 528:	f0 0d       	add	r31, r0
 52a:	b1 1d       	adc	r27, r1
 52c:	aa 1f       	adc	r26, r26
 52e:	64 9f       	mul	r22, r20
 530:	66 27       	eor	r22, r22
 532:	b0 0d       	add	r27, r0
 534:	a1 1d       	adc	r26, r1
 536:	66 1f       	adc	r22, r22
 538:	82 9f       	mul	r24, r18
 53a:	22 27       	eor	r18, r18
 53c:	b0 0d       	add	r27, r0
 53e:	a1 1d       	adc	r26, r1
 540:	62 1f       	adc	r22, r18
 542:	73 9f       	mul	r23, r19
 544:	b0 0d       	add	r27, r0
 546:	a1 1d       	adc	r26, r1
 548:	62 1f       	adc	r22, r18
 54a:	83 9f       	mul	r24, r19
 54c:	a0 0d       	add	r26, r0
 54e:	61 1d       	adc	r22, r1
 550:	22 1f       	adc	r18, r18
 552:	74 9f       	mul	r23, r20
 554:	33 27       	eor	r19, r19
 556:	a0 0d       	add	r26, r0
 558:	61 1d       	adc	r22, r1
 55a:	23 1f       	adc	r18, r19
 55c:	84 9f       	mul	r24, r20
 55e:	60 0d       	add	r22, r0
 560:	21 1d       	adc	r18, r1
 562:	82 2f       	mov	r24, r18
 564:	76 2f       	mov	r23, r22
 566:	6a 2f       	mov	r22, r26
 568:	11 24       	eor	r1, r1
 56a:	9f 57       	subi	r25, 0x7F	; 127
 56c:	50 40       	sbci	r21, 0x00	; 0
 56e:	9a f0       	brmi	.+38     	; 0x596 <__mulsf3_pse+0x88>
 570:	f1 f0       	breq	.+60     	; 0x5ae <__mulsf3_pse+0xa0>
 572:	88 23       	and	r24, r24
 574:	4a f0       	brmi	.+18     	; 0x588 <__mulsf3_pse+0x7a>
 576:	ee 0f       	add	r30, r30
 578:	ff 1f       	adc	r31, r31
 57a:	bb 1f       	adc	r27, r27
 57c:	66 1f       	adc	r22, r22
 57e:	77 1f       	adc	r23, r23
 580:	88 1f       	adc	r24, r24
 582:	91 50       	subi	r25, 0x01	; 1
 584:	50 40       	sbci	r21, 0x00	; 0
 586:	a9 f7       	brne	.-22     	; 0x572 <__mulsf3_pse+0x64>
 588:	9e 3f       	cpi	r25, 0xFE	; 254
 58a:	51 05       	cpc	r21, r1
 58c:	80 f0       	brcs	.+32     	; 0x5ae <__mulsf3_pse+0xa0>
 58e:	0c 94 20 02 	jmp	0x440	; 0x440 <__fp_inf>
 592:	0c 94 6b 02 	jmp	0x4d6	; 0x4d6 <__fp_szero>
 596:	5f 3f       	cpi	r21, 0xFF	; 255
 598:	e4 f3       	brlt	.-8      	; 0x592 <__mulsf3_pse+0x84>
 59a:	98 3e       	cpi	r25, 0xE8	; 232
 59c:	d4 f3       	brlt	.-12     	; 0x592 <__mulsf3_pse+0x84>
 59e:	86 95       	lsr	r24
 5a0:	77 95       	ror	r23
 5a2:	67 95       	ror	r22
 5a4:	b7 95       	ror	r27
 5a6:	f7 95       	ror	r31
 5a8:	e7 95       	ror	r30
 5aa:	9f 5f       	subi	r25, 0xFF	; 255
 5ac:	c1 f7       	brne	.-16     	; 0x59e <__mulsf3_pse+0x90>
 5ae:	fe 2b       	or	r31, r30
 5b0:	88 0f       	add	r24, r24
 5b2:	91 1d       	adc	r25, r1
 5b4:	96 95       	lsr	r25
 5b6:	87 95       	ror	r24
 5b8:	97 f9       	bld	r25, 7
 5ba:	08 95       	ret

000005bc <_exit>:
 5bc:	f8 94       	cli

000005be <__stop_program>:
 5be:	ff cf       	rjmp	.-2      	; 0x5be <__stop_program>
